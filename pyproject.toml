[tool.poetry]
name = "diploma"
version = "0.1.0"
description = ""
authors = ["v.karmazin"]
readme = "README.md"
package-mode = false

[[tool.poetry.source]]
name = "pytorch"
# GPU (cu116)
#url = "https://download.pytorch.org/whl/cu116"
# CPU
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[tool.poetry.dependencies]
python = "^3.9.8"
more-itertools = "^10.2.0"
tqdm = "^4.66.2"
numpy = "^1.26.4"
pandas = "^2.2.2"
torch = [
    { version = "^1.13.1", source = "pypi", platform = "darwin" },
    { version = "^1.13.1", source = "pytorch", platform = "linux" },
    { version = "^1.13.1", source = "pytorch", platform = "win32" },
]
torchvision = [
    { version = "^0.14.1", source = "pypi", platform = "darwin" },
    { version = "^0.14.1", source = "pytorch", platform = "linux" },
    { version = "^0.14.1", source = "pytorch", platform = "win32" },
]
torchaudio = [
    { version = "^0.13.1", source = "pypi", platform = "darwin" },
    { version = "^0.13.1", source = "pytorch", platform = "linux" },
    { version = "^0.13.1", source = "pytorch", platform = "win32" },
]
transformers = "4.30.2"
einops = "^0.8.0"
peft = { git = "https://github.com/huggingface/peft", rev = "08cb3dde577747f6ca6638c884fd66fd16cf2e9d" } # 0.10.0 does not fit
opencv-python = "^4.9.0.80"
eva-decord = "^0.6.1"  # decord = "^0.6.0" does not have bindings for macos
pytorchvideo = "^0.1.5"
soundfile = "^0.12.1"
streamlit = "^1.33.0"
faiss-cpu = "^1.8.0"
pymilvus = "~2.4"  # keep synchronized with actual Milvus version in docker-compose.yml

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.2"
mypy = "^1.10.0"
pytest = "^8.2.0"

[tool.mypy]
pretty = true
python_version = 3.9

[tool.ruff]
lint.ignore = [
    "T201",  # `print` found
    "ERA001",  # Found commented-out code
    "ANN204",  # Missing return type annotation for special method `__init__`
    "ANN101",  # Missing type annotation for `self` in method
]
line-length = 120
lint.select = [
    "A", # flake8-builtins
    "ARG", # flake8-unused-arguments
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "E", # pycodestyle
    "ERA", # eradicate
    "I", # isort
    "F", # Pyflakes
    "G", # flake8-logging-format
    "N", # pep8-naming
    "PL", # pylint
    "PT", # flake8-pytest-style
    "RET", # flake8-return
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "SLF", # flake8-self
    "T20", # flake8-print
    "UP", # pyupgrade
    "ANN" # flake8-annotations
]
target-version = "py39"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
